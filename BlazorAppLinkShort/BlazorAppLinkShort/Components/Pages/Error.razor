@page "/Error"
@using System.Diagnostics
 
<PageTitle>Error</PageTitle>

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

@code{
    [CascadingParameter] // cascade parameter: httpcontext will have the highest hierarchy
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;

    //specifications: for this page to work, there is interaction with other project files. They are:

    //App.Razor: must be configured so that the page is redirected
    //Imports.Razor: for using directives
    //Program.cs: to configure the HtttpClient that we use in the code, the same applies to Dependency Injections
    //MainLayout (optional): To standardize error.razor in a layout (example: @layput MainLayout)
    //Sytlizations: CSS and JS
    //NavigationManager: optional, for automatic redirection to problems

}
